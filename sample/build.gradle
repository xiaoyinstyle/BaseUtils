apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId 'yin.style.sample'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'armeabi', 'x86'
        }

//        //配置keystore签名
//        signingConfigs {
//            release {
//                storeFile file("Composition.jks")
//                storePassword "composition123"
//                keyAlias "key0"
//                keyPassword "composition456"
//                v2SigningEnabled false
//            }
//        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def temp = "debug"
            if (variant.buildType.name == "release")
                temp = "release"
            outputFileName = "sample_${defaultConfig.versionCode}_v${defaultConfig.versionName}_${new Date().format("yyyy-MM-dd")}_${temp}.apk"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }

//    repositories {
//        flatDir {
//            dirs 'aar'
//        }
//    }
//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['jniLibs']
//        }
//    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(':baseUtils')
    implementation project(':recyclerlib')
    //    compile 'yin.style.utils:baseUtils:0.0.9'

    //注解
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    api project(':matisse')
    //    implementation 'yin.style.utils:matisse:0.0.1'

    implementation project(':camera')
    implementation project(':updatelibrary')

    implementation project(':autolayout')


    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.lzy.net:okrx2:2.0.2'


    //内存泄漏管理
    debugApi 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}

//这里为Groovy的语法，大意就是将所有com.andriod.support的支持库版本强制为所制定的版本。所以依赖冲突问题解决。
//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'com.android.support') {
//            if (!requested.name.startsWith("multidex")) {
//                //这里指定需要统一的依赖版本,这里统一为26.0.0-alpha1
//                details.useVersion '26.0.0'
//            }
//        }
//    }
//}

